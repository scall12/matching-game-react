{"version":3,"sources":["components/Card.jsx","helpers.js","components/Board.jsx","components/Reset.jsx","components/Win.jsx","components/Lose.jsx","components/Result.jsx","components/Size.jsx","components/Move.jsx","components/Timer.jsx","components/Setup.jsx","components/Game.jsx","App.js","serviceWorker.js","index.js"],"names":["Card","props","useState","text","setText","visible","setVisible","useEffect","timeout","setTimeout","matchList","includes","id","val","turn","card1","value","card2","clearTimeout","size","cards","onClick","className","createDeck","uniqueVals","valsArr","i","push","card","a","indexOf","b","Math","floor","random","length","tempVal","timeObject","Board","setCards","renderRow","num","deck","rowNum","arr","keyId","key","shift","slice","renderBoard","Reset","message","Win","moves","time","Lose","Result","result","Size","placeholder","type","max","min","step","onInput","event","target","changeSize","Move","Timer","sec","seconds","minutes","s","toString","holder","split","unshift","join","Setup","Game","setSize","setTurn","setMatchList","setMoves","setTime","isActive","setIsActive","setResult","console","log","timer","setInterval","clearInterval","reset","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.f82d8da4.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Card = (props) => {\n  const [text, setText] = useState('hide-text');\n  const [visible, setVisible] = useState('visible');\n\n  const handleClick = () => {\n    if (\n      props.val === props.turn.card1.value ||\n      props.val === props.turn.card2.value\n    ) {\n      setText('show-text');\n    }\n  };\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      if (props.matchList.includes(props.id)) {\n        setVisible('hidden');\n      } else if (\n        props.val !== props.turn.card1.value &&\n        props.val !== props.turn.card2.value\n      ) {\n        setText('hide-text');\n      } else if (!props.matchList.includes(props.id)) {\n        setVisible('visible');\n      }\n    }, 500);\n    return () => clearTimeout(timeout);\n  }, [props.turn, props.matchList, props.id, props.val]);\n\n  useEffect(() => {\n    setText('hide-text');\n  }, [props.size, props.cards]);\n\n  return (\n    <button\n      onClick={() => {\n        props.onClick(props.id, props.value);\n        handleClick();\n      }}\n      className={`${visible} ${text}`}\n    >\n      {props.value}\n    </button>\n  );\n};\n\nexport default Card;\n","const createDeck = (size) => {\n  const uniqueVals = (size * size) / 2;\n  const valsArr = [];\n  for (let i = 0; i < uniqueVals; i++) {\n    valsArr.push(i);\n    valsArr.push(i);\n  }\n  for (let card of valsArr) {\n    const a = valsArr.indexOf(card);\n    const b = valsArr[Math.floor(Math.random() * valsArr.length)];\n\n    let tempVal = card;\n    valsArr[a] = valsArr[b];\n    valsArr[b] = tempVal;\n  }\n  return valsArr;\n};\n\nconst timeObject = {\n  '2': 5,\n  '4': 30,\n  '6': 120,\n  '8': 210,\n  '10': 420,\n};\n\nexport { createDeck, timeObject };\n","import React, { useEffect } from 'react';\n\nimport Card from './Card';\nimport { createDeck } from '../helpers';\n\nconst Board = (props) => {\n  const { setCards } = props;\n\n  useEffect(() => {\n    setCards(createDeck(props.size));\n  }, [props.size, setCards]);\n\n  const renderRow = (num, deck, rowNum) => {\n    const arr = [];\n    for (let i = 0; i < num; i++) {\n      const keyId = `${rowNum}${i}`;\n      arr.push(\n        <Card\n          key={keyId}\n          id={keyId}\n          value={deck[0]}\n          turn={props.turn}\n          matchList={props.matchList}\n          onClick={props.onClick}\n          cards={props.cards}\n          size={props.size}\n        />\n      );\n      deck.shift();\n    }\n    return arr;\n  };\n\n  const renderBoard = (num, cards) => {\n    const deck = cards.slice();\n    const arr = [];\n    for (let i = 0; i < num; i++) {\n      arr.push(\n        <div id={`row${i}`} key={`row${i}`}>\n          {renderRow(num, deck, i)}\n        </div>\n      );\n    }\n    return arr;\n  };\n\n  return <div id=\"board\">{renderBoard(props.size, props.cards)}</div>;\n};\n\nexport default Board;\n","import React from 'react';\n\nconst Reset = (props) => {\n  return (\n    <button onClick={() => props.onClick(props.size)}>{props.message}</button>\n  );\n};\n\nexport default Reset;\n","import React from 'react';\n\nimport Reset from './Reset';\nimport { timeObject } from '../helpers';\n\nconst Win = ({ moves, size, time, onClick }) => {\n  return (\n    <div className=\"container\" id=\"win\">\n      <div>\n        <span>You won in {moves} moves.</span>\n      </div>\n      <div>\n        <span>And it only took you {timeObject[size] - time} seconds.</span>\n      </div>\n      <Reset onClick={onClick} size={size} message={'Play Again'} />\n    </div>\n  );\n};\n\nexport default Win;\n","import React from 'react';\n\nimport Reset from './Reset';\n\nconst Lose = ({ moves, onClick, size }) => {\n  return (\n    <div className=\"container\" id=\"lose\">\n      <div>\n        <span>You lost after {moves} moves.</span>\n      </div>\n      <Reset onClick={onClick} size={size} message={'Play Again'} />\n    </div>\n  );\n};\n\nexport default Lose;\n","import React from 'react';\n\nimport Win from './Win';\nimport Lose from './Lose';\n\nconst Result = ({ result, time, moves, size, onClick }) => {\n  if (result === 'win') {\n    return <Win time={time} moves={moves} size={size} onClick={onClick} />;\n  } else if (result === 'lose') {\n    return <Lose moves={moves} onClick={onClick} size={size} />;\n  } else {\n    return '';\n  }\n};\n\nexport default Result;\n","import React from 'react';\n\nconst Size = (props) => {\n  return (\n    <>\n      <input\n        id=\"size-input\"\n        placeholder=\"Size of Board (4)\"\n        type=\"number\"\n        max=\"10\"\n        min=\"2\"\n        step=\"2\"\n        onInput={(event) => {\n          let size = 4;\n          if (\n            event.target.value % 2 === 0 &&\n            event.target.value >= 2 &&\n            event.target.value <= 10\n          ) {\n            props.changeSize(event.target.value);\n          } else {\n            props.changeSize(size);\n          }\n        }}\n      />\n    </>\n  );\n};\n\nexport default Size;\n","import React from 'react';\n\nconst Move = (props) => {\n  return <div id=\"moves\">{props.moves} Moves</div>;\n};\n\nexport default Move;\n","import React from 'react';\n\nconst Timer = ({ time }) => {\n  const seconds = time % 60;\n  const minutes = Math.floor(time / 60);\n\n  const s = seconds.toString();\n\n  let sec;\n  if (s.length <= 1) {\n    const holder = s.split('');\n    holder.unshift('0');\n    sec = holder.join('');\n  }\n\n  return (\n    <div id=\"timer\">\n      {minutes}:{sec || seconds} Left\n    </div>\n  );\n};\n\nexport default Timer;\n","import React from 'react';\n\nimport Size from './Size';\nimport Reset from './Reset';\nimport Move from './Move';\nimport Timer from './Timer';\n\nconst Setup = ({ changeSize, onClick, size, time, moves }) => {\n  return (\n    <div id=\"setup\">\n      <h1>Matching Game</h1>\n      <h2>Welcome to my React.js Matching Game!</h2>\n      <p>\n        Choose what size grid you would like to play and find all the matches\n        before the timer runs out. The timer will start as soon as you select a\n        card.\n      </p>\n      <Size changeSize={changeSize} />\n      <Reset onClick={onClick} size={size} message={'Reset'} />\n      <div id=\"counters\">\n        <Timer time={time} />\n        <Move moves={moves} />\n      </div>\n    </div>\n  );\n};\n\nexport default Setup;\n","import React, { useState, useEffect } from 'react';\n\nimport Board from './Board';\nimport Result from './Result';\nimport { createDeck, timeObject } from '../helpers';\nimport Setup from './Setup';\n\nconst Game = () => {\n  const [size, setSize] = useState(4);\n  const [turn, setTurn] = useState({ card1: {}, card2: {} });\n  const [matchList, setMatchList] = useState([]);\n  const [cards, setCards] = useState([]);\n  const [moves, setMoves] = useState(0);\n  const [time, setTime] = useState(timeObject[size]);\n  const [isActive, setIsActive] = useState(false);\n  const [result, setResult] = useState('');\n\n  const handleClick = (id, value) => {\n    setIsActive(true);\n    if (!turn.card1.id) {\n      setTurn({ ...turn, card1: { id, value } });\n    } else if (!turn.card2.id && turn.card1.id !== id) {\n      setTurn({ ...turn, card2: { id, value } });\n    }\n  };\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      if (turn.card1.value === turn.card2.value && turn.card1.id) {\n        setMatchList([...matchList, turn.card1.id, turn.card2.id]);\n        setTurn({ card1: {}, card2: {} });\n        setMoves(() => moves + 1);\n      } else if (turn.card1.value !== turn.card2.value && turn.card2.id) {\n        setTurn({ card1: {}, card2: {} });\n        setMoves(() => moves + 1);\n      }\n    }, 500);\n\n    return () => clearTimeout(timeout);\n  }, [turn, matchList, moves]);\n\n  useEffect(() => {\n    if (size * size === matchList.length) {\n      console.log('WIN!');\n      setResult('win');\n      setIsActive(false);\n    }\n  }, [size, matchList]);\n\n  useEffect(() => {\n    let timer;\n    if (isActive && time > 0) {\n      timer = setInterval(() => {\n        setTime(() => time - 1);\n      }, 1000);\n    } else if (time <= 0 && isActive) {\n      clearInterval(timer);\n      setIsActive(false);\n      setResult('lose');\n      console.log('LOSER!');\n    } else if (!isActive) {\n      clearInterval(timer);\n    }\n    return () => clearInterval(timer);\n  }, [time, isActive]);\n\n  const changeSize = (val) => {\n    setSize(val);\n    reset(val);\n  };\n\n  const reset = (val) => {\n    setMatchList([]);\n    setTurn({ card1: {}, card2: {} });\n    setCards(createDeck(val));\n    setMoves(0);\n    setTime(timeObject[val]);\n    setIsActive(false);\n    setResult('');\n  };\n\n  return (\n    <>\n      <Setup\n        changeSize={changeSize}\n        moves={moves}\n        size={size}\n        time={time}\n        onClick={reset}\n      />\n      <Board\n        size={size}\n        onClick={handleClick}\n        turn={turn}\n        matchList={matchList}\n        cards={cards}\n        setCards={setCards}\n      />\n      <Result\n        result={result}\n        time={time}\n        moves={moves}\n        size={size}\n        onClick={reset}\n      />\n    </>\n  );\n};\n\nexport default Game;\n","import React from 'react';\nimport './App.css';\nimport Game from './components/Game';\n\nfunction App() {\n  return <Game />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}